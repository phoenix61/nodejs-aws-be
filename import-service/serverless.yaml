service: import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  stage: ${env:STAGE}
  region: ${env:REGION}
  profile: ${env:PROFILE}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::${env:BUCKET}"
    - Effect: "Allow"
      Action:
        - s3:*
      Resource:
        - "arn:aws:s3:::${env:BUCKET}/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]

  environment:
    REGION: ${env:REGION}
    BUCKET: ${env:BUCKET}
    SQS_URL:
      Ref: SQSQueue

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${env:QUEUE_NAME}

  Outputs:
    sqsUrl:
      Value:
        Ref: SQSQueue
    sqsArn:
      Value:
        Fn::GetAtt: [SQSQueue, Arn]

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
        bucket: ${env:BUCKET}
        event: s3:ObjectCreated:*
        rules:
          - prefix: uploaded/
        existing: true



